I"¼<h1 id="-e-628-maximum-product-of-three-numbers">&lt;-E 628&gt; Maximum Product of Three Numbers</h1>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Method 1</span>
<span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
<span class="nl">public:</span>
    <span class="kt">int</span> <span class="n">maximumProduct</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&amp;</span> <span class="n">nums</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">sort</span><span class="p">(</span><span class="n">nums</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span><span class="n">nums</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
        <span class="k">return</span> <span class="n">max</span><span class="p">((</span><span class="n">nums</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">*</span> <span class="n">nums</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">*</span> <span class="n">nums</span><span class="p">.</span><span class="n">back</span><span class="p">()),</span>
                   <span class="p">(</span><span class="n">nums</span><span class="p">.</span><span class="n">back</span><span class="p">()</span> <span class="o">*</span> <span class="n">nums</span><span class="p">[</span><span class="n">nums</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">-</span> <span class="mi">2</span><span class="p">]</span> <span class="o">*</span> <span class="n">nums</span><span class="p">[</span><span class="n">nums</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">-</span> <span class="mi">3</span><span class="p">]));</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="c1">// Method 2</span>
<span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
<span class="nl">public:</span>
    <span class="kt">int</span> <span class="n">maximumProduct</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&amp;</span> <span class="n">nums</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">int</span> <span class="n">mx1</span> <span class="o">=</span> <span class="n">INT_MIN</span><span class="p">,</span> <span class="n">mx2</span> <span class="o">=</span> <span class="n">INT_MIN</span><span class="p">,</span> <span class="n">mx3</span> <span class="o">=</span> <span class="n">INT_MIN</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">mn1</span> <span class="o">=</span> <span class="n">INT_MAX</span><span class="p">,</span> <span class="n">mn2</span> <span class="o">=</span> <span class="n">INT_MAX</span><span class="p">;</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">num</span> <span class="o">:</span> <span class="n">nums</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">num</span> <span class="o">&gt;</span> <span class="n">mx1</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">mx3</span> <span class="o">=</span> <span class="n">mx2</span><span class="p">;</span> <span class="n">mx2</span> <span class="o">=</span> <span class="n">mx1</span><span class="p">;</span> <span class="n">mx1</span> <span class="o">=</span> <span class="n">num</span><span class="p">;</span>
            <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">num</span> <span class="o">&gt;</span> <span class="n">mx2</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">mx3</span> <span class="o">=</span> <span class="n">mx2</span><span class="p">;</span> <span class="n">mx2</span> <span class="o">=</span> <span class="n">num</span><span class="p">;</span>
            <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">num</span> <span class="o">&gt;</span> <span class="n">mx3</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">mx3</span> <span class="o">=</span> <span class="n">num</span><span class="p">;</span>
            <span class="p">}</span>
            
            <span class="k">if</span> <span class="p">(</span><span class="n">num</span> <span class="o">&lt;</span> <span class="n">mn1</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">mn2</span> <span class="o">=</span> <span class="n">mn1</span><span class="p">;</span> <span class="n">mn1</span> <span class="o">=</span> <span class="n">num</span><span class="p">;</span>
            <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">num</span> <span class="o">&lt;</span> <span class="n">mn2</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">mn2</span> <span class="o">=</span> <span class="n">num</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="n">max</span><span class="p">(</span><span class="n">mx1</span> <span class="o">*</span> <span class="n">mx2</span> <span class="o">*</span> <span class="n">mx3</span><span class="p">,</span> <span class="n">mx1</span> <span class="o">*</span> <span class="n">mn1</span> <span class="o">*</span> <span class="n">mn2</span><span class="p">);</span>        
    <span class="p">}</span>
<span class="p">};</span>
</code></pre></div></div>

:ET