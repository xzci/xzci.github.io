I"79<h1 id="-h-65-valid-number">&lt;-H 65&gt; Valid Number</h1>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Method 1</span>
<span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
<span class="nl">private:</span>
    <span class="k">enum</span> <span class="n">InputType</span> <span class="p">{</span>
            <span class="n">INVALID</span><span class="p">,</span>  <span class="c1">// 0</span>
            <span class="n">SPACE</span><span class="p">,</span>    <span class="c1">// 1</span>
            <span class="n">SIGN</span><span class="p">,</span>     <span class="c1">// 2</span>
            <span class="n">DIGIT</span><span class="p">,</span>    <span class="c1">// 3</span>
            <span class="n">DOT</span><span class="p">,</span>      <span class="c1">// 4</span>
            <span class="n">EXPONENT</span><span class="p">,</span> <span class="c1">// 5</span>
            <span class="n">NUM_INPUTS</span><span class="c1">// 6</span>
        <span class="p">};</span>

<span class="nl">public:</span>
    <span class="kt">bool</span> <span class="n">isNumber</span><span class="p">(</span><span class="n">string</span> <span class="n">s</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">const</span> <span class="kt">int</span> <span class="n">transitionTable</span><span class="p">[][</span><span class="n">NUM_INPUTS</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span>
        <span class="o">-</span><span class="mi">1</span><span class="p">,</span>  <span class="mi">0</span><span class="p">,</span>  <span class="mi">3</span><span class="p">,</span>  <span class="mi">1</span><span class="p">,</span>  <span class="mi">2</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span>
        <span class="o">-</span><span class="mi">1</span><span class="p">,</span>  <span class="mi">8</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span>  <span class="mi">1</span><span class="p">,</span>  <span class="mi">4</span><span class="p">,</span>  <span class="mi">5</span><span class="p">,</span>
        <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span>  <span class="mi">4</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span>
        <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span>  <span class="mi">1</span><span class="p">,</span>  <span class="mi">2</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span>
        <span class="o">-</span><span class="mi">1</span><span class="p">,</span>  <span class="mi">8</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span>  <span class="mi">4</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span>  <span class="mi">5</span><span class="p">,</span>
        <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span>  <span class="mi">6</span><span class="p">,</span>  <span class="mi">7</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span>
        <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span>  <span class="mi">7</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span>
        <span class="o">-</span><span class="mi">1</span><span class="p">,</span>  <span class="mi">8</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span>  <span class="mi">7</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span>
        <span class="o">-</span><span class="mi">1</span><span class="p">,</span>  <span class="mi">8</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span>
    <span class="p">};</span>
        <span class="kt">int</span> <span class="n">state</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="k">auto</span> <span class="n">i</span> <span class="o">:</span> <span class="n">s</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">InputType</span> <span class="n">inputType</span> <span class="o">=</span> <span class="n">INVALID</span><span class="p">;</span>
            <span class="k">if</span><span class="p">(</span><span class="n">isspace</span><span class="p">(</span><span class="n">i</span><span class="p">))</span>
                <span class="n">inputType</span> <span class="o">=</span> <span class="n">SPACE</span><span class="p">;</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="sc">'+'</span> <span class="o">||</span> <span class="n">i</span> <span class="o">==</span> <span class="sc">'-'</span><span class="p">)</span>
                <span class="n">inputType</span> <span class="o">=</span> <span class="n">SIGN</span><span class="p">;</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">isdigit</span><span class="p">(</span><span class="n">i</span><span class="p">))</span>
                <span class="n">inputType</span> <span class="o">=</span> <span class="n">DIGIT</span><span class="p">;</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="sc">'.'</span><span class="p">)</span>
                <span class="n">inputType</span> <span class="o">=</span> <span class="n">DOT</span><span class="p">;</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="sc">'e'</span> <span class="o">||</span> <span class="n">i</span> <span class="o">==</span> <span class="sc">'E'</span><span class="p">)</span>
                <span class="n">inputType</span> <span class="o">=</span> <span class="n">EXPONENT</span><span class="p">;</span>

            <span class="n">state</span> <span class="o">=</span> <span class="n">transitionTable</span><span class="p">[</span><span class="n">state</span><span class="p">][</span><span class="n">inputType</span><span class="p">];</span>

            <span class="k">if</span><span class="p">(</span><span class="n">state</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
                <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">return</span> <span class="n">state</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">||</span> <span class="n">state</span> <span class="o">==</span> <span class="mi">4</span> <span class="o">||</span> <span class="n">state</span> <span class="o">==</span> <span class="mi">7</span> <span class="o">||</span> <span class="n">state</span> <span class="o">==</span> <span class="mi">8</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="c1">// Method 2</span>
<span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
<span class="nl">public:</span>
    <span class="kt">bool</span> <span class="n">isNumber</span><span class="p">(</span><span class="n">string</span> <span class="n">s</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">bool</span> <span class="n">sign</span> <span class="o">=</span> <span class="n">alse</span><span class="p">,</span> <span class="n">dot</span> <span class="o">=</span> <span class="nb">false</span><span class="p">,</span> <span class="n">exp</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
        <span class="kt">bool</span> <span class="n">num</span> <span class="o">=</span> <span class="nb">false</span><span class="p">,</span> <span class="n">numAfterE</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">s</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">isspace</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]))</span> <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">sign</span> <span class="o">||</span> <span class="n">dot</span> <span class="o">||</span> <span class="n">exp</span> <span class="o">||</span> <span class="n">num</span><span class="p">)</span>
                    <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
            <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'+'</span> <span class="o">||</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'-'</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">i</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span><span class="o">!=</span><span class="sc">' '</span> <span class="o">&amp;&amp;</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span><span class="o">!=</span><span class="sc">'e'</span><span class="p">)</span>
                    <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
                <span class="n">sign</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
            <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'.'</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">dot</span> <span class="o">||</span> <span class="n">exp</span><span class="p">)</span>
                    <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
                <span class="n">dot</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
            <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'e'</span> <span class="o">||</span> <span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'E'</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="n">num</span> <span class="o">||</span> <span class="n">exp</span><span class="p">)</span>
                    <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
                <span class="n">exp</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                <span class="n">numAfterE</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
            <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">isdigit</span><span class="p">(</span><span class="n">s</span><span class="p">[</span><span class="n">i</span><span class="p">]))</span> <span class="p">{</span>
                <span class="n">num</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                <span class="n">numAfterE</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
            <span class="p">}</span> <span class="k">else</span> <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">return</span> <span class="n">num</span> <span class="o">&amp;&amp;</span> <span class="n">numAfterE</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>
</code></pre></div></div>
:ET