I")<h1 id="-h-44-wildcard-matching">&lt;-H 44&gt; Wildcard Matching</h1>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Method 1</span>
<span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
<span class="nl">public:</span>
    <span class="kt">bool</span> <span class="n">isMatch</span><span class="p">(</span><span class="n">string</span> <span class="n">s</span><span class="p">,</span> <span class="n">string</span> <span class="n">p</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">char</span> <span class="n">char_s</span><span class="p">[</span><span class="n">s</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">+</span> <span class="mi">1</span><span class="p">];</span>
        <span class="kt">char</span> <span class="n">char_p</span><span class="p">[</span><span class="n">p</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">+</span> <span class="mi">1</span><span class="p">];</span>
        <span class="n">strcpy</span><span class="p">(</span><span class="n">char_s</span><span class="p">,</span> <span class="n">s</span><span class="p">.</span><span class="n">c_str</span><span class="p">());</span>
        <span class="n">strcpy</span><span class="p">(</span><span class="n">char_p</span><span class="p">,</span> <span class="n">p</span><span class="p">.</span><span class="n">c_str</span><span class="p">());</span>
        <span class="k">return</span> <span class="n">isMatch</span><span class="p">(</span><span class="n">char_s</span><span class="p">,</span> <span class="n">char_p</span><span class="p">);</span>
    <span class="p">}</span>
<span class="nl">private:</span>
    <span class="kt">bool</span> <span class="n">isMatch</span><span class="p">(</span><span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">s</span><span class="p">,</span> <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">p</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">bool</span> <span class="n">star</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
        <span class="k">const</span> <span class="kt">char</span> <span class="o">*</span><span class="n">str</span><span class="p">,</span> <span class="o">*</span><span class="n">ptr</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="n">str</span> <span class="o">=</span> <span class="n">s</span><span class="p">,</span> <span class="n">ptr</span> <span class="o">=</span> <span class="n">p</span><span class="p">;</span> <span class="o">*</span><span class="n">str</span> <span class="o">!=</span> <span class="sc">'\0'</span><span class="p">;</span> <span class="n">str</span><span class="o">++</span><span class="p">,</span> <span class="n">ptr</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">switch</span><span class="p">(</span><span class="o">*</span><span class="n">ptr</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">case</span> <span class="sc">'?'</span><span class="p">:</span>
                    <span class="k">break</span><span class="p">;</span>
                <span class="k">case</span> <span class="sc">'*'</span><span class="p">:</span>
                    <span class="n">star</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                    <span class="n">s</span> <span class="o">=</span> <span class="n">str</span><span class="p">,</span> <span class="n">p</span> <span class="o">=</span> <span class="n">ptr</span><span class="p">;</span>
                    <span class="k">while</span><span class="p">(</span><span class="o">*</span><span class="n">p</span> <span class="o">==</span> <span class="sc">'*'</span><span class="p">)</span>
                        <span class="n">p</span><span class="o">++</span><span class="p">;</span>
                    <span class="k">if</span><span class="p">(</span><span class="o">*</span><span class="n">p</span> <span class="o">==</span> <span class="sc">'\0'</span><span class="p">)</span>
                        <span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
                    <span class="n">str</span> <span class="o">=</span> <span class="n">s</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
                    <span class="n">ptr</span> <span class="o">=</span> <span class="n">p</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
                <span class="nl">default:</span>
                    <span class="k">if</span><span class="p">(</span><span class="o">*</span><span class="n">str</span> <span class="o">!=</span> <span class="o">*</span><span class="n">ptr</span><span class="p">)</span> <span class="p">{</span>
                        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">star</span><span class="p">)</span>
                            <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
                        <span class="n">s</span><span class="o">++</span><span class="p">;</span>
                        <span class="n">str</span> <span class="o">=</span> <span class="n">s</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
                        <span class="n">ptr</span> <span class="o">=</span> <span class="n">p</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
                    <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">while</span> <span class="p">(</span><span class="o">*</span><span class="n">ptr</span> <span class="o">==</span> <span class="sc">'*'</span><span class="p">)</span>
                <span class="n">ptr</span><span class="o">++</span><span class="p">;</span>
            <span class="k">return</span> <span class="p">(</span><span class="o">*</span><span class="n">ptr</span> <span class="o">==</span> <span class="sc">'\0'</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="c1">// Method 2</span>
<span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
<span class="nl">public:</span>
    <span class="kt">bool</span> <span class="n">isMatch</span><span class="p">(</span><span class="n">string</span> <span class="n">s</span><span class="p">,</span> <span class="n">string</span> <span class="n">p</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">int</span> <span class="n">pi</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">si</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">star</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">count</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

        <span class="k">while</span> <span class="p">(</span><span class="n">si</span> <span class="o">&lt;</span> <span class="n">s</span><span class="p">.</span><span class="n">size</span><span class="p">())</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">p</span><span class="p">[</span><span class="n">pi</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'*'</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">count</span> <span class="o">=</span> <span class="n">si</span><span class="p">;</span>
                <span class="n">star</span> <span class="o">=</span> <span class="n">pi</span><span class="o">++</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">p</span><span class="p">[</span><span class="n">pi</span><span class="p">]</span> <span class="o">==</span> <span class="n">s</span><span class="p">[</span><span class="n">si</span><span class="p">]</span> <span class="o">||</span> <span class="n">p</span><span class="p">[</span><span class="n">pi</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'?'</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">pi</span><span class="o">++</span><span class="p">,</span> <span class="n">si</span><span class="o">++</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">star</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">){</span>
                <span class="n">pi</span> <span class="o">=</span> <span class="n">star</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
                <span class="n">si</span> <span class="o">=</span> <span class="o">++</span><span class="n">count</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">while</span> <span class="p">(</span><span class="n">pi</span> <span class="o">&lt;</span> <span class="n">p</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="n">p</span><span class="p">[</span><span class="n">pi</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'*'</span><span class="p">)</span>
            <span class="n">pi</span><span class="o">++</span><span class="p">;</span>
        <span class="k">return</span> <span class="n">pi</span> <span class="o">==</span> <span class="n">p</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>

    <span class="p">}</span>
<span class="p">};</span>
</code></pre></div></div>
:ET