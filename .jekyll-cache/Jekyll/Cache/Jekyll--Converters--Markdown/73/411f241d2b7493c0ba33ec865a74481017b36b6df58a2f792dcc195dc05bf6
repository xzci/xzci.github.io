I"<h1 id="-e-1496-path-crossing">&lt;-E 1496&gt; Path Crossing</h1>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
<span class="nl">public:</span>
    <span class="kt">bool</span> <span class="n">isPathCrossing</span><span class="p">(</span><span class="k">const</span> <span class="n">string</span><span class="o">&amp;</span> <span class="n">path</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">unordered_set</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">us</span><span class="p">;</span>
        <span class="n">us</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="s">"0.0"</span><span class="p">);</span>
        <span class="k">const</span> <span class="n">string</span> <span class="n">point</span> <span class="p">{</span><span class="s">"."</span><span class="p">};</span>
        <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="k">auto</span> <span class="n">i</span> <span class="o">:</span> <span class="n">path</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">switch</span><span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">case</span><span class="sc">'N'</span><span class="p">:</span> <span class="o">++</span><span class="n">y</span><span class="p">;</span> <span class="k">break</span><span class="p">;</span>
                <span class="k">case</span><span class="sc">'S'</span><span class="p">:</span> <span class="o">--</span><span class="n">y</span><span class="p">;</span> <span class="k">break</span><span class="p">;</span>
                <span class="k">case</span><span class="sc">'E'</span><span class="p">:</span> <span class="o">--</span><span class="n">x</span><span class="p">;</span> <span class="k">break</span><span class="p">;</span>
                <span class="k">case</span><span class="sc">'W'</span><span class="p">:</span> <span class="o">++</span><span class="n">x</span><span class="p">;</span> <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="n">string</span> <span class="n">s</span> <span class="p">{</span><span class="n">to_string</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="o">+</span><span class="n">point</span><span class="o">+</span><span class="n">to_string</span><span class="p">(</span><span class="n">y</span><span class="p">)};</span>
            <span class="k">if</span><span class="p">(</span><span class="n">us</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="n">s</span><span class="p">))</span> <span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
            <span class="n">us</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">s</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>
</code></pre></div></div>

:ET