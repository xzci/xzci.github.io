I"Å
<h1 id="-e-1078-occurrences-after-bigram">&lt;-E 1078&gt; Occurrences After Bigram</h1>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
<span class="nl">public:</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">findOcurrences</span><span class="p">(</span><span class="n">string</span> <span class="n">text</span><span class="p">,</span> <span class="n">string</span> <span class="n">first</span><span class="p">,</span> <span class="n">string</span> <span class="n">second</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">result</span><span class="p">;</span>
        <span class="n">stringstream</span> <span class="n">ss</span><span class="p">(</span><span class="n">text</span><span class="p">);</span>
        <span class="n">string</span> <span class="n">token1</span><span class="p">,</span> <span class="n">token2</span><span class="p">,</span> <span class="n">token3</span><span class="p">;</span>
        
        <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">ss</span><span class="p">.</span><span class="n">eof</span><span class="p">())</span> <span class="p">{</span>
            <span class="n">ss</span> <span class="o">&gt;&gt;</span> <span class="n">token3</span><span class="p">;</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">token1</span> <span class="o">==</span> <span class="n">first</span> <span class="o">&amp;&amp;</span> <span class="n">token2</span> <span class="o">==</span> <span class="n">second</span><span class="p">)</span>
                <span class="n">result</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">token3</span><span class="p">);</span>
            
            <span class="n">token1</span> <span class="o">=</span> <span class="n">std</span><span class="o">::</span><span class="n">move</span><span class="p">(</span><span class="n">token2</span><span class="p">),</span> <span class="n">token2</span> <span class="o">=</span> <span class="n">std</span><span class="o">::</span><span class="n">move</span><span class="p">(</span><span class="n">token3</span><span class="p">);</span>
        <span class="p">}</span>
        
        <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>
</code></pre></div></div>

:ET