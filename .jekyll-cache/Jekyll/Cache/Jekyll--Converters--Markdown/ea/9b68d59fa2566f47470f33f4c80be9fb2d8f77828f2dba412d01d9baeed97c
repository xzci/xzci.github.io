I"d<p>作为个人不知道如何分类的一些反思和总结。</p>
<h1 id="总结">总结</h1>
<h2 id="封装">封装</h2>
<p>主要的原因是为了编程简单，比如说，一段重复的操作，或者重复的结构，可以通过封装对程序进行简化处理，只需要在某次编写好相关的函数，或者类，通过调用或者继承，将大大减少开发的时间。同时在修改时，也会变得更为简单。（只需要修改一处，其余的部分都会随之更改。), 同时。如果有写有细微的改动，此时，可以使用各种语言提供的，比如虚函数，抽象函数，对相应的实现进行针对化的封装。</p>
<h2 id="try-catch">Try-Catch</h2>
<p>对程序要有相应的错误处理。需要有出错文件，出错行号（可选）， 出错函数，或者是确认用的信息。 确认需要是否需去自己实现相关的功能，相关的语言中是否有提供相应的类。 如果实现的话，有几个问题：</p>
<ul> <li>如何确定行号，（c语言可以简单实现，其他的好像比较复杂）</li> <li>如何确定函数名，自动确定。（被包括的函数？程序的API？）</li> <li>出错的源文件</li> </ul>
<p>正式上线的时候不需要清空log文件。</p>
<h2 id="设计模式">设计模式</h2>
<p>相应的，先要去确认一下</p>
<ul> <li>错误如何处理，是否要留有记录，出错后应该如何操作。</li> <li>这里是业务逻辑。</li> <li>结束处理。确认结束后应该出现什么样子的提示，或者发送邮件。</li> <li>用户体验。</li> </ul>
<p>class -&gt; 方法 -&gt; 变量 （注意各种变量的保护级别，相应的处理。）</p>
<p>学习：</p>
<p>Do the test————–&gt;get wrong or do not understand | | | | +read the book and get understand +</p>
<p>design and code———-&gt;get wrong or do...
</p>
:ET