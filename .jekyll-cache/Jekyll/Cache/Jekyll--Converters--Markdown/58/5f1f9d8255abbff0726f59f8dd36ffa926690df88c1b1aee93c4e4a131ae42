I"µ<h1 id="-m-add-two-numbers-56ms-275">&lt;-M&gt; Add Two Numbers 56ms 27.5%</h1>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">l1</span> <span class="o">?</span> <span class="n">l1</span><span class="o">-&gt;</span><span class="n">val</span> <span class="o">:</span> <span class="mi">0</span><span class="p">)</span>
<span class="n">l1</span> <span class="o">=</span> <span class="n">l1</span> <span class="o">?</span> <span class="n">l1</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">:</span> <span class="n">l1</span><span class="p">;</span>
</code></pre></div></div>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */</span>
<span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
<span class="nl">public:</span>
    <span class="n">ListNode</span><span class="o">*</span> <span class="n">addTwoNumbers</span><span class="p">(</span><span class="n">ListNode</span><span class="o">*</span> <span class="n">l1</span><span class="p">,</span> <span class="n">ListNode</span><span class="o">*</span> <span class="n">l2</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">int</span> <span class="n">remainder</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="n">ListNode</span> <span class="n">answer</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
        <span class="n">ListNode</span> <span class="o">*</span><span class="n">p</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">answer</span><span class="p">;</span>
        <span class="k">while</span> <span class="p">(</span><span class="n">l1</span> <span class="o">||</span> <span class="n">l2</span> <span class="o">||</span> <span class="n">remainder</span><span class="p">)</span> <span class="p">{</span>
            <span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="p">(</span><span class="n">l1</span> <span class="o">?</span> <span class="n">l1</span><span class="o">-&gt;</span><span class="n">val</span> <span class="o">:</span> <span class="mi">0</span><span class="p">)</span> <span class="o">+</span> <span class="p">(</span><span class="n">l2</span> <span class="o">?</span> <span class="n">l2</span><span class="o">-&gt;</span><span class="n">val</span> <span class="o">:</span> <span class="mi">0</span><span class="p">)</span> <span class="o">+</span> <span class="n">remainder</span><span class="p">;</span>
            <span class="n">remainder</span> <span class="o">=</span> <span class="n">sum</span> <span class="o">/</span> <span class="mi">10</span><span class="p">;</span>
            <span class="n">p</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ListNode</span><span class="p">(</span><span class="n">sum</span> <span class="o">%</span> <span class="mi">10</span><span class="p">);</span>
            <span class="n">p</span> <span class="o">=</span> <span class="n">p</span><span class="o">-&gt;</span><span class="n">next</span><span class="p">;</span>
            <span class="n">l1</span> <span class="o">=</span> <span class="n">l1</span> <span class="o">?</span> <span class="n">l1</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">:</span> <span class="n">l1</span><span class="p">;</span>
            <span class="n">l2</span> <span class="o">=</span> <span class="n">l2</span> <span class="o">?</span> <span class="n">l2</span><span class="o">-&gt;</span><span class="n">next</span> <span class="o">:</span> <span class="n">l2</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="n">answer</span><span class="p">.</span><span class="n">next</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>
</code></pre></div></div>

:ET