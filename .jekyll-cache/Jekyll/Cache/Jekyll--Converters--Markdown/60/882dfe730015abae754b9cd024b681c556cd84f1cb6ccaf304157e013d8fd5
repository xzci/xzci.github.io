I"„&<h1 id="-e-67-add-binary">&lt;-E 67&gt; Add Binary</h1>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
<span class="nl">public:</span>
    <span class="n">string</span> <span class="n">addBinary</span><span class="p">(</span><span class="n">string</span> <span class="n">a</span><span class="p">,</span> <span class="n">string</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
        
        <span class="k">const</span> <span class="kt">int</span> <span class="n">aLength</span> <span class="o">=</span> <span class="n">a</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>
        <span class="k">const</span> <span class="kt">int</span> <span class="n">bLength</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>
        <span class="k">const</span> <span class="kt">int</span> <span class="n">resultLength</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="n">aLength</span><span class="p">,</span> <span class="n">bLength</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>

        <span class="kt">char</span> <span class="n">temp</span><span class="p">[</span><span class="n">resultLength</span> <span class="o">+</span> <span class="mi">1</span><span class="p">];</span>
        <span class="n">temp</span><span class="p">[</span><span class="n">resultLength</span><span class="p">]</span> <span class="o">=</span> <span class="sc">'\0'</span><span class="p">;</span>

        <span class="kt">int</span> <span class="n">resultIndex</span> <span class="o">=</span> <span class="n">resultLength</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">carry</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">aLength</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">j</span> <span class="o">=</span> <span class="n">bLength</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="n">i</span><span class="o">&gt;=</span><span class="mi">0</span> <span class="o">||</span> <span class="n">j</span> <span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">--</span><span class="p">,</span> <span class="n">j</span><span class="o">--</span><span class="p">,</span> <span class="n">resultIndex</span><span class="o">--</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">const</span> <span class="kt">int</span> <span class="n">aVal</span> <span class="o">=</span> <span class="p">(</span><span class="n">i</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">?</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">:</span> <span class="sc">'0'</span><span class="p">)</span> <span class="o">-</span> <span class="sc">'0'</span><span class="p">;</span>
            <span class="k">const</span> <span class="kt">int</span> <span class="n">bVal</span> <span class="o">=</span> <span class="p">(</span><span class="n">j</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">?</span> <span class="n">b</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">:</span> <span class="sc">'0'</span><span class="p">)</span> <span class="o">-</span> <span class="sc">'0'</span><span class="p">;</span>
            <span class="k">const</span> <span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="n">aVal</span> <span class="o">+</span> <span class="n">bVal</span> <span class="o">+</span> <span class="n">carry</span><span class="p">;</span>
            <span class="n">temp</span><span class="p">[</span><span class="n">resultIndex</span><span class="p">]</span> <span class="o">=</span> <span class="p">(</span><span class="n">sum</span> <span class="o">%</span> <span class="mi">2</span><span class="p">)</span> <span class="o">+</span> <span class="sc">'0'</span><span class="p">;</span>
            <span class="n">carry</span> <span class="o">=</span> <span class="n">sum</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="kt">char</span><span class="o">*</span> <span class="n">result</span> <span class="o">=</span> <span class="o">&amp;</span><span class="n">temp</span><span class="p">[</span><span class="n">resultIndex</span><span class="p">];</span>
        
        <span class="k">if</span> <span class="p">(</span><span class="n">carry</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
            <span class="n">result</span><span class="p">[</span><span class="n">resultIndex</span><span class="p">]</span> <span class="o">=</span> <span class="n">carry</span> <span class="o">+</span> <span class="sc">'0'</span><span class="p">;</span>
        <span class="k">else</span>
            <span class="n">result</span><span class="o">++</span><span class="p">;</span>

        <span class="k">return</span> <span class="n">result</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>



<span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
<span class="nl">public:</span>
    <span class="n">string</span> <span class="n">addBinary</span><span class="p">(</span><span class="n">string</span><span class="o">&amp;</span> <span class="n">a</span><span class="p">,</span> <span class="n">string</span><span class="o">&amp;</span> <span class="n">b</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">size</span><span class="p">(),</span> <span class="n">b</span><span class="p">.</span><span class="n">size</span><span class="p">());</span>
        <span class="n">string</span> <span class="n">s</span><span class="p">;</span>
        <span class="n">s</span><span class="p">.</span><span class="n">reserve</span><span class="p">(</span><span class="n">n</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
        
        <span class="kt">int</span> <span class="n">carry</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">a</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>
        <span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">b</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>
        <span class="k">while</span> <span class="p">(</span><span class="n">i</span> <span class="o">||</span> <span class="n">j</span> <span class="o">||</span> <span class="n">carry</span><span class="p">)</span> <span class="p">{</span>
            <span class="kt">int</span> <span class="n">current_pos_sum</span> <span class="o">=</span> <span class="n">carry</span><span class="p">;</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">i</span><span class="p">)</span> <span class="n">current_pos_sum</span> <span class="o">+=</span> <span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="o">--</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'1'</span> <span class="o">?</span> <span class="mi">1</span> <span class="o">:</span> <span class="mi">0</span><span class="p">);</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">j</span><span class="p">)</span> <span class="n">current_pos_sum</span> <span class="o">+=</span> <span class="p">(</span><span class="n">b</span><span class="p">[</span><span class="o">--</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'1'</span> <span class="o">?</span> <span class="mi">1</span> <span class="o">:</span> <span class="mi">0</span><span class="p">);</span>
            
            <span class="n">s</span><span class="p">.</span><span class="n">push_back</span><span class="p">((</span><span class="n">current_pos_sum</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="o">?</span> <span class="sc">'1'</span> <span class="o">:</span> <span class="sc">'0'</span><span class="p">);</span>
            <span class="n">carry</span> <span class="o">=</span> <span class="n">current_pos_sum</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="n">reverse</span><span class="p">(</span><span class="n">s</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">s</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
        <span class="k">return</span> <span class="n">s</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>
</code></pre></div></div>

:ET