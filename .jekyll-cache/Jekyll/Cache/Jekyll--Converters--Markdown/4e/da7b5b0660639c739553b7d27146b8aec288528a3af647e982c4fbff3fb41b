I"<h1 id="-e-1033-moving-stones-until-consecutive">&lt;-E 1033&gt; Moving Stones Until Consecutive</h1>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
<span class="nl">public:</span>
    <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">numMovesStones</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">b</span><span class="p">,</span> <span class="kt">int</span> <span class="n">c</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">int</span> <span class="n">sum_</span> <span class="o">=</span> <span class="n">a</span> <span class="o">+</span> <span class="n">b</span> <span class="o">+</span> <span class="n">c</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">min_</span> <span class="o">=</span> <span class="n">min</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">min</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="p">));</span>
        <span class="kt">int</span> <span class="n">max_</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="n">a</span><span class="p">,</span> <span class="n">max</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="n">c</span><span class="p">));</span>
        <span class="kt">int</span> <span class="n">mid_</span> <span class="o">=</span> <span class="n">sum_</span> <span class="o">-</span> <span class="n">min_</span> <span class="o">-</span> <span class="n">max_</span><span class="p">;</span>
        
        <span class="k">if</span> <span class="p">(</span><span class="n">max_</span> <span class="o">-</span> <span class="n">min_</span> <span class="o">==</span> <span class="mi">2</span><span class="p">)</span>
            <span class="k">return</span> <span class="p">{</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">};</span>
        
        <span class="kt">int</span> <span class="n">min_move</span> <span class="o">=</span> <span class="n">min</span><span class="p">(</span><span class="n">mid_</span> <span class="o">-</span> <span class="n">min_</span><span class="p">,</span> <span class="n">max_</span> <span class="o">-</span> <span class="n">mid_</span><span class="p">)</span> <span class="o">&lt;=</span> <span class="mi">2</span> <span class="o">?</span> <span class="mi">1</span> <span class="o">:</span> <span class="mi">2</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">max_move</span> <span class="o">=</span> <span class="n">max_</span> <span class="o">-</span> <span class="n">min_</span> <span class="o">-</span> <span class="mi">2</span><span class="p">;</span>
        <span class="k">return</span> <span class="p">{</span><span class="n">min_move</span><span class="p">,</span> <span class="n">max_move</span><span class="p">};</span>
    <span class="p">}</span>
<span class="p">};</span>
</code></pre></div></div>

:ET