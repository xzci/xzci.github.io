I"û)<h1 id="-h-4-median-of-two-sorted-arrays">&lt;-H 4&gt; Median of Two Sorted Arrays</h1>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Method 1</span>
<span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
<span class="nl">public:</span>
<span class="kt">double</span> <span class="n">findMedianSortedArrays</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&amp;</span> <span class="n">A</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&amp;</span> <span class="n">B</span><span class="p">)</span> <span class="p">{</span>
    <span class="kt">int</span> <span class="n">n</span> <span class="o">=</span> <span class="n">A</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>
    <span class="kt">int</span> <span class="n">m</span> <span class="o">=</span> <span class="n">B</span><span class="p">.</span><span class="n">size</span><span class="p">();</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">n</span> <span class="o">&gt;</span> <span class="n">m</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">findMedianSortedArrays</span><span class="p">(</span><span class="n">B</span><span class="p">,</span> <span class="n">A</span><span class="p">);</span> <span class="c1">// Swapping to make A smaller</span>

    <span class="kt">int</span> <span class="n">start</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">end</span> <span class="o">=</span> <span class="n">n</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">realmidinmergedarray</span> <span class="o">=</span> <span class="p">(</span><span class="n">n</span> <span class="o">+</span> <span class="n">m</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>

    <span class="k">while</span> <span class="p">(</span><span class="n">start</span> <span class="o">&lt;=</span> <span class="n">end</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">int</span> <span class="n">mid</span> <span class="o">=</span> <span class="p">(</span><span class="n">start</span> <span class="o">+</span> <span class="n">end</span><span class="p">)</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">leftAsize</span> <span class="o">=</span> <span class="n">mid</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">leftBsize</span> <span class="o">=</span> <span class="n">realmidinmergedarray</span> <span class="o">-</span> <span class="n">mid</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">leftA</span>
            <span class="o">=</span> <span class="p">(</span><span class="n">leftAsize</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
                  <span class="o">?</span> <span class="n">A</span><span class="p">[</span><span class="n">leftAsize</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span>
                  <span class="o">:</span> <span class="n">INT_MIN</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">leftB</span>
            <span class="o">=</span> <span class="p">(</span><span class="n">leftBsize</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="o">?</span> <span class="n">B</span><span class="p">[</span><span class="n">leftBsize</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">:</span> <span class="n">INT_MIN</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">rightA</span>
            <span class="o">=</span> <span class="p">(</span><span class="n">leftAsize</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">)</span> <span class="o">?</span> <span class="n">A</span><span class="p">[</span><span class="n">leftAsize</span><span class="p">]</span> <span class="o">:</span> <span class="n">INT_MAX</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">rightB</span>
            <span class="o">=</span> <span class="p">(</span><span class="n">leftBsize</span> <span class="o">&lt;</span> <span class="n">m</span><span class="p">)</span> <span class="o">?</span> <span class="n">B</span><span class="p">[</span><span class="n">leftBsize</span><span class="p">]</span> <span class="o">:</span> <span class="n">INT_MAX</span><span class="p">;</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">leftA</span> <span class="o">&lt;=</span> <span class="n">rightB</span> <span class="n">and</span> <span class="n">leftB</span> <span class="o">&lt;=</span> <span class="n">rightA</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span> <span class="p">((</span><span class="n">m</span> <span class="o">+</span> <span class="n">n</span><span class="p">)</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
                <span class="k">return</span> <span class="p">(</span><span class="n">max</span><span class="p">(</span><span class="n">leftA</span><span class="p">,</span> <span class="n">leftB</span><span class="p">)</span>
                        <span class="o">+</span> <span class="n">min</span><span class="p">(</span><span class="n">rightA</span><span class="p">,</span> <span class="n">rightB</span><span class="p">))</span>
                       <span class="o">/</span> <span class="mf">2.0</span><span class="p">;</span>
            <span class="k">return</span> <span class="n">max</span><span class="p">(</span><span class="n">leftA</span><span class="p">,</span> <span class="n">leftB</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">leftA</span> <span class="o">&gt;</span> <span class="n">rightB</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">end</span> <span class="o">=</span> <span class="n">mid</span> <span class="o">-</span> <span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">else</span>
            <span class="n">start</span> <span class="o">=</span> <span class="n">mid</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mf">0.0</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>
<span class="c1">// Method 2</span>
<span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
<span class="nl">public:</span>
    <span class="kt">double</span> <span class="n">findMedianSortedArrays</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&amp;</span> <span class="n">nums1</span><span class="p">,</span> <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;&amp;</span> <span class="n">nums2</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">Temp</span><span class="p">;</span>
        <span class="n">Temp</span><span class="p">.</span><span class="n">reserve</span><span class="p">(</span><span class="n">nums1</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">+</span> <span class="n">nums1</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="p">);</span>
        <span class="n">Temp</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">Temp</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">nums1</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">nums1</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
        <span class="n">Temp</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">Temp</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="n">nums2</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">nums2</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
		<span class="n">sort</span><span class="p">(</span><span class="n">Temp</span><span class="p">.</span><span class="n">begin</span><span class="p">(),</span> <span class="n">Temp</span><span class="p">.</span><span class="n">end</span><span class="p">());</span>
		<span class="k">if</span> <span class="p">(</span><span class="n">Temp</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
			<span class="k">return</span> <span class="p">(</span><span class="n">Temp</span><span class="p">[</span><span class="n">Temp</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">/</span> <span class="mi">2</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="n">Temp</span><span class="p">[</span><span class="n">Temp</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">/</span> <span class="mi">2</span><span class="p">])</span> <span class="o">/</span> <span class="mf">2.0</span><span class="p">;</span>
		<span class="k">else</span>
			<span class="k">return</span>  <span class="n">Temp</span><span class="p">[</span><span class="n">Temp</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">/</span> <span class="mi">2</span><span class="p">];</span>
    <span class="p">}</span>
<span class="p">};</span>
</code></pre></div></div>
:ET