I"S<h1 id="-e-690-employee-importance">&lt;-E 690&gt; Employee Importance</h1>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cm">/*
// Definition for Employee.
class Employee {
public:
    int id;
    int importance;
    vector&lt;int&gt; subordinates;
};
*/</span>
<span class="c1">// Method 1</span>
<span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
<span class="nl">public:</span>
    <span class="kt">int</span> <span class="n">getImportance</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">Employee</span><span class="o">*&gt;</span> <span class="n">employees</span><span class="p">,</span> <span class="kt">int</span> <span class="n">id</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">unordered_map</span><span class="o">&lt;</span><span class="kt">int</span><span class="p">,</span> <span class="n">Employee</span><span class="o">*&gt;</span><span class="n">m</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="k">auto</span> <span class="n">x</span><span class="o">:</span> <span class="n">employees</span><span class="p">)</span> 
			<span class="n">m</span><span class="p">[</span><span class="n">x</span><span class="o">-&gt;</span><span class="n">id</span><span class="p">]</span> <span class="o">=</span> <span class="n">x</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="n">deque</span><span class="o">&lt;</span><span class="n">Employee</span><span class="o">*&gt;</span> <span class="n">q</span><span class="p">;</span>
        <span class="n">q</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">m</span><span class="p">[</span><span class="n">id</span><span class="p">]);</span>
        <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="p">{</span>
            <span class="k">auto</span> <span class="n">p</span> <span class="o">=</span> <span class="n">q</span><span class="p">.</span><span class="n">front</span><span class="p">();</span>
            <span class="n">q</span><span class="p">.</span><span class="n">pop_front</span><span class="p">();</span>
            <span class="k">for</span><span class="p">(</span><span class="k">auto</span> <span class="n">x</span><span class="o">:</span> <span class="n">p</span><span class="o">-&gt;</span><span class="n">subordinates</span><span class="p">)</span> <span class="n">q</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">m</span><span class="p">[</span><span class="n">x</span><span class="p">]);</span>
            <span class="n">sum</span> <span class="o">+=</span> <span class="n">p</span><span class="o">-&gt;</span><span class="n">importance</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">return</span> <span class="n">sum</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>

<span class="c1">// Method 2</span>
<span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
<span class="nl">public:</span>
    <span class="kt">int</span> <span class="n">findImportanceValue</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">Employee</span><span class="o">*&gt;</span> <span class="n">employees</span><span class="p">,</span> <span class="kt">int</span> <span class="n">id</span><span class="p">)</span> <span class="p">{</span>
    <span class="n">Employee</span><span class="o">*</span> <span class="n">currentEmployee</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">employees</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">employees</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">-&gt;</span><span class="n">id</span> <span class="o">==</span>  <span class="n">id</span><span class="p">)</span> <span class="p">{</span>
            <span class="n">currentEmployee</span> <span class="o">=</span> <span class="n">employees</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="kt">int</span> <span class="n">totalExp</span> <span class="o">=</span> <span class="n">currentEmployee</span><span class="o">-&gt;</span><span class="n">importance</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">currentEmployee</span><span class="o">-&gt;</span><span class="n">subordinates</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">totalExp</span> <span class="o">+=</span> <span class="p">(</span><span class="n">findImportanceValue</span><span class="p">(</span><span class="n">employees</span><span class="p">,</span> <span class="n">currentEmployee</span><span class="o">-&gt;</span><span class="n">subordinates</span><span class="p">[</span><span class="n">i</span><span class="p">]));</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">totalExp</span><span class="p">;</span>
	<span class="p">}</span>
    <span class="kt">int</span> <span class="n">getImportance</span><span class="p">(</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">Employee</span><span class="o">*&gt;</span> <span class="n">employees</span><span class="p">,</span> <span class="kt">int</span> <span class="n">id</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">return</span> <span class="n">findImportanceValue</span><span class="p">(</span><span class="n">employees</span><span class="p">,</span><span class="n">id</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">};</span>
</code></pre></div></div>

:ET