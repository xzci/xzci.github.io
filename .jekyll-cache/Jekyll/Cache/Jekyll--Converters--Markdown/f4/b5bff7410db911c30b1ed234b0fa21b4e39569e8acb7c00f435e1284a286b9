I"Y!<h1 id="-m-71-simplify-path">&lt;-M 71&gt; Simplify Path</h1>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Method 1</span>
<span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
<span class="nl">public:</span>
    <span class="n">string</span> <span class="n">simplifyPath</span><span class="p">(</span><span class="n">string</span> <span class="n">path</span><span class="p">)</span> <span class="p">{</span>
        <span class="n">vector</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">dirs</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="k">auto</span> <span class="n">i</span> <span class="o">=</span> <span class="n">path</span><span class="p">.</span><span class="n">begin</span><span class="p">();</span> <span class="n">i</span> <span class="o">!=</span> <span class="n">path</span><span class="p">.</span><span class="n">end</span><span class="p">();)</span> <span class="p">{</span>
            <span class="o">++</span><span class="n">i</span><span class="p">;</span>

            <span class="k">auto</span> <span class="n">j</span> <span class="o">=</span> <span class="n">find</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">path</span><span class="p">.</span><span class="n">end</span><span class="p">(),</span> <span class="sc">'/'</span><span class="p">);</span>
            <span class="k">auto</span> <span class="n">dir</span> <span class="o">=</span> <span class="n">string</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">);</span>

            <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">dir</span><span class="p">.</span><span class="n">empty</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="n">dir</span> <span class="o">!=</span> <span class="s">"."</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">dir</span> <span class="o">==</span> <span class="s">".."</span><span class="p">)</span> <span class="p">{</span>
                    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">dirs</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
                        <span class="n">dirs</span><span class="p">.</span><span class="n">pop_back</span><span class="p">();</span>
                <span class="p">}</span>
                <span class="k">else</span>
                    <span class="n">dirs</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">dir</span><span class="p">);</span>
            <span class="p">}</span>
            <span class="n">i</span> <span class="o">=</span> <span class="n">j</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="n">stringstream</span> <span class="n">out</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">dirs</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
            <span class="n">out</span> <span class="o">&lt;&lt;</span> <span class="s">"/"</span><span class="p">;</span>
        <span class="k">else</span>
            <span class="k">for</span><span class="p">(</span><span class="k">auto</span> <span class="n">dir</span> <span class="o">:</span> <span class="n">dirs</span><span class="p">)</span>
                <span class="n">out</span> <span class="o">&lt;&lt;</span> <span class="sc">'/'</span> <span class="o">&lt;&lt;</span> <span class="n">dir</span><span class="p">;</span>

        <span class="k">return</span> <span class="n">out</span><span class="p">.</span><span class="n">str</span><span class="p">();</span>

    <span class="p">}</span>
<span class="p">};</span>

<span class="c1">// Method 2</span>
<span class="k">class</span> <span class="nc">Solution</span> <span class="p">{</span>
<span class="nl">public:</span>
    <span class="n">string</span> <span class="n">simplifyPath</span><span class="p">(</span><span class="n">string</span> <span class="n">path</span><span class="p">)</span> <span class="p">{</span>

        <span class="n">stack</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">st</span><span class="p">;</span>
        <span class="n">string</span> <span class="n">res</span><span class="p">;</span>

        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>  <span class="n">i</span> <span class="o">&lt;</span> <span class="n">path</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span> <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">path</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="sc">'/'</span><span class="p">)</span>
                <span class="k">continue</span><span class="p">;</span>
            <span class="n">string</span> <span class="n">temp</span><span class="p">;</span>
            <span class="k">while</span><span class="p">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">path</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="n">path</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">!=</span> <span class="sc">'/'</span><span class="p">)</span> <span class="p">{</span>
                <span class="n">temp</span> <span class="o">+=</span> <span class="n">path</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="o">++</span><span class="n">i</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="n">temp</span> <span class="o">==</span> <span class="s">"."</span><span class="p">)</span>
                <span class="k">continue</span><span class="p">;</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">temp</span> <span class="o">==</span> <span class="s">".."</span><span class="p">)</span> <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">st</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
                    <span class="n">st</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
            <span class="p">}</span>
            <span class="k">else</span>
                <span class="n">st</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">temp</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">st</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="p">{</span>
            <span class="n">res</span> <span class="o">=</span> <span class="s">"/"</span> <span class="o">+</span> <span class="n">st</span><span class="p">.</span><span class="n">top</span><span class="p">()</span> <span class="o">+</span> <span class="n">res</span><span class="p">;</span>
            <span class="n">st</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="k">if</span><span class="p">(</span><span class="n">res</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
            <span class="k">return</span> <span class="s">"/"</span><span class="p">;</span>

        <span class="k">return</span> <span class="n">res</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">};</span>
</code></pre></div></div>
:ET